#!/usr/bin/env node
import J from"https";import Y from"fs";import A from"path";import{pipeline as M}from"stream";import{promisify as N}from"util";import{fileURLToPath as R}from"url";var T=R(import.meta.url),E=A.dirname(T),q=N(M);class V{total;current;width;startTime;constructor(D,F=40){this.total=D,this.current=0,this.width=F,this.startTime=Date.now()}update(D){this.current=D;let F=Math.round(D/this.total*100),K=Math.round(D/this.total*this.width),O=this.width-K,Q=(Date.now()-this.startTime)/1000,W=D/Q,X=W>0?(this.total-D)/W:0,Z="█".repeat(K)+"░".repeat(O),$=this.formatBytes(D)+"/"+this.formatBytes(this.total),L=this.formatBytes(W)+"/s";process.stdout.write(`\r\x1B[36m[\x1B[0m${Z}\x1B[36m]\x1B[0m ${F}% ${$} ${L} ETA: ${this.formatTime(X)}`)}complete(){let D=(Date.now()-this.startTime)/1000;process.stdout.write(`\r\x1B[32m[\x1B[0m${"█".repeat(this.width)}\x1B[32m]\x1B[0m 100% ${this.formatBytes(this.total)} Complete in ${this.formatTime(D)}
`)}formatBytes(D){if(D===0)return"0 B";let F=1024,K=["B","KB","MB","GB"],O=Math.floor(Math.log(D)/Math.log(F));return parseFloat((D/Math.pow(F,O)).toFixed(1))+" "+K[O]}formatTime(D){if(D<60)return Math.round(D)+"s";let F=Math.floor(D/60),K=Math.round(D%60);return`${F}m ${K}s`}}function x(){let{platform:D,arch:F}=process,K={win32:"windows",darwin:"darwin",linux:"linux",freebsd:"freebsd",openbsd:"openbsd"},O={x64:"amd64",arm64:"arm64",arm:"arm",ia32:"386"},Q=K[D],W=O[F];if(!Q||!W)throw new Error(`Unsupported platform: ${D}-${F}`);let X=D==="win32"?".exe":"",Z=`yq-pdf-cli-${Q}-${W}${X}`;return{platform:Q,arch:W,binaryName:Z,localBinaryName:`yq-pdf-cli${X}`}}function H(){try{let D=A.join(E,"..","package.json");return JSON.parse(Y.readFileSync(D,"utf8")).version}catch(D){throw new Error(`Failed to read package.json: ${D.message}`)}}function G(){try{let D=A.join(E,"..","package.json"),F=JSON.parse(Y.readFileSync(D,"utf8")),K=F.repository?.url||F.homepage;if(!K)throw new Error("No repository URL found in package.json");let O=K.match(/github\.com[\/:]([^\/]+)\/([^\/\.]+)/);if(!O)throw new Error("Invalid GitHub repository URL");return{owner:O[1],repo:O[2]}}catch(D){throw new Error(`Failed to parse repository info: ${D.message}`)}}function C(D){return new Promise((F,K)=>{let O=J.get(D,{headers:{"User-Agent":"yq-pdf-postinstall"}},(Q)=>{if(Q.statusCode===302||Q.statusCode===301)return C(Q.headers.location).then(F).catch(K);if(Q.statusCode!==200){K(new Error(`HTTP ${Q.statusCode}: ${Q.statusMessage}`));return}F(Q)});O.on("error",K),O.setTimeout(30000,()=>{O.destroy(),K(new Error("Request timeout"))})})}async function U(D,F){console.log(`\x1B[34mDownloading binary from:\x1B[0m ${D}`);try{let K=await C(D),O=parseInt(K.headers["content-length"],10);if(!O)throw new Error("Unable to determine file size");let Q=new V(O),W=0,X=A.dirname(F);if(!Y.existsSync(X))Y.mkdirSync(X,{recursive:!0});let Z=Y.createWriteStream(F);if(K.on("data",($)=>{W+=$.length,Q.update(W)}),await q(K,Z),Q.complete(),process.platform!=="win32")Y.chmodSync(F,493);console.log(`\x1B[32m✓ Binary downloaded successfully to:\x1B[0m ${F}`)}catch(K){throw new Error(`Download failed: ${K.message}`)}}async function B(){console.log(`\x1B[36m\uD83D\uDE80 yq-pdf postinstall: Setting up binary...\x1B[0m
`);try{let D=x();console.log(`\x1B[33mDetected platform:\x1B[0m ${D.platform}-${D.arch}`);let F=H(),{owner:K,repo:O}=G();console.log(`\x1B[33mPackage version:\x1B[0m v${F}`),console.log(`\x1B[33mRepository:\x1B[0m ${K}/${O}
`);let Q=`https://github.com/${K}/${O}/releases/download/v${F}/${D.binaryName}`,W=A.join(E,"..","src","binary",D.localBinaryName);if(Y.existsSync(W)){let Z=Y.statSync(W),$=Date.now()-Z.mtime.getTime(),L=86400000;if($<86400000){console.log("\x1B[32m✓ Binary already exists and is recent, skipping download\x1B[0m");return}}if(await U(Q,W),!Y.existsSync(W))throw new Error("Binary was not created successfully");let X=Y.statSync(W);if(X.size===0)throw new Error("Downloaded binary is empty");console.log(`\x1B[32m✓ Binary setup complete! Size: ${(X.size/1024/1024).toFixed(2)} MB\x1B[0m`),console.log(`\x1B[36m\uD83C\uDF89 yq-pdf is ready to use!\x1B[0m
`)}catch(D){console.error(`\x1B[31m❌ Postinstall failed: ${D.message}\x1B[0m`),console.error("\x1B[31m\uD83D\uDCA1 This will prevent the package installation from completing.\x1B[0m"),console.error(`\x1B[31m\uD83D\uDD27 Please check your internet connection and try again.\x1B[0m
`),process.exit(1)}}process.on("unhandledRejection",(D)=>{console.error(`\x1B[31m❌ Unhandled error: ${D.message}\x1B[0m`),process.exit(1)});process.on("SIGINT",()=>{console.log(`
\x1B[31m❌ Installation cancelled by user\x1B[0m`),process.exit(1)});if(import.meta.url===`file://${process.argv[1]}`)B();
